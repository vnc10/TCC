<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="lista-encadeada-cache"><sessioninfo id="BRSPOBITANL1668-e3f8a243" start="1628976042760" dump="1628976043121"/><package name="tcc"><class name="tcc/AbstractLinkedList$LinkedSubListIterator" sourcefilename="AbstractLinkedList.java"><method name="&lt;init&gt;" desc="(Ltcc/AbstractLinkedList$LinkedSubList;I)V" line="899"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="905"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrevious" desc="()Z" line="910"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextIndex" desc="()I" line="915"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)V" line="920"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="927"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="tcc/AbstractLinkedList$LinkedSubList" sourcefilename="AbstractLinkedList.java"><method name="&lt;init&gt;" desc="(Ltcc/AbstractLinkedList;II)V" line="954"><counter type="INSTRUCTION" missed="19" covered="27"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="972"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="978"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(ILjava/lang/Object;)V" line="985"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Ljava/lang/Object;" line="995"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="1006"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(ILjava/util/Collection;)Z" line="1011"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILjava/lang/Object;)Ljava/lang/Object;" line="1027"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="1034"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="1044"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listIterator" desc="(I)Ljava/util/ListIterator;" line="1050"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subList" desc="(II)Ljava/util/List;" line="1057"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rangeCheck" desc="(II)V" line="1061"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkModCount" desc="()V" line="1067"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="238"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="6" covered="57"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="tcc/AbstractLinkedList$Node" sourcefilename="AbstractLinkedList.java"><method name="&lt;init&gt;" desc="()V" line="639"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="649"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ltcc/AbstractLinkedList$Node;Ltcc/AbstractLinkedList$Node;Ljava/lang/Object;)V" line="660"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="673"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Object;)V" line="683"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPreviousNode" desc="()Ltcc/AbstractLinkedList$Node;" line="693"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPreviousNode" desc="(Ltcc/AbstractLinkedList$Node;)V" line="703"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextNode" desc="()Ltcc/AbstractLinkedList$Node;" line="713"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNextNode" desc="(Ltcc/AbstractLinkedList$Node;)V" line="723"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="22"/><counter type="LINE" missed="11" covered="10"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="tcc/NodeCachingLinkedList" sourcefilename="NodeCachingLinkedList.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="40"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(I)V" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaximumCacheSize" desc="()I" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMaximumCacheSize" desc="(I)V" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shrinkCacheToMaximumSize" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeFromCache" desc="()Ltcc/AbstractLinkedList$Node;" line="67"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCacheFull" desc="()Z" line="78"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNodeToCache" desc="(Ltcc/AbstractLinkedList$Node;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNode" desc="(Ljava/lang/Object;)Ltcc/AbstractLinkedList$Node;" line="97"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeNode" desc="(Ltcc/AbstractLinkedList$Node;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNodes" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeObject" desc="(Ljava/io/ObjectOutputStream;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readObject" desc="(Ljava/io/ObjectInputStream;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="150"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="4" covered="51"/><counter type="COMPLEXITY" missed="2" covered="18"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="tcc/AbstractLinkedList$LinkedListIterator" sourcefilename="AbstractLinkedList.java"><method name="&lt;init&gt;" desc="(Ltcc/AbstractLinkedList;I)V" line="774"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkModCount" desc="()V" line="789"><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastNodeReturned" desc="()Ltcc/AbstractLinkedList$Node;" line="802"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="810"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="815"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrevious" desc="()Z" line="828"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="previous" desc="()Ljava/lang/Object;" line="833"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextIndex" desc="()I" line="846"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="previousIndex" desc="()I" line="852"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="857"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;)V" line="873"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)V" line="879"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="199"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="49"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="tcc/AbstractLinkedList" sourcefilename="AbstractLinkedList.java"><method name="&lt;init&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="82"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()V" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="105"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listIterator" desc="()Ljava/util/ListIterator;" line="122"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listIterator" desc="(I)Ljava/util/ListIterator;" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="134"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I" line="146"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="163"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="174"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="181"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subList" desc="(II)Ljava/util/List;" line="206"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Z" line="212"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(ILjava/lang/Object;)V" line="218"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="224"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(ILjava/util/Collection;)Z" line="229"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Ljava/lang/Object;" line="239"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="247"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="267"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="290"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILjava/lang/Object;)Ljava/lang/Object;" line="303"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="311"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirst" desc="()Ljava/lang/Object;" line="316"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLast" desc="()Ljava/lang/Object;" line="324"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFirst" desc="(Ljava/lang/Object;)Z" line="332"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLast" desc="(Ljava/lang/Object;)Z" line="337"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFirst" desc="()Ljava/lang/Object;" line="342"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLast" desc="()Ljava/lang/Object;" line="352"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="363"><counter type="INSTRUCTION" missed="1" covered="49"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="385"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqualValue" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="402"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateNode" desc="(Ltcc/AbstractLinkedList$Node;Ljava/lang/Object;)V" line="414"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createHeaderNode" desc="()Ltcc/AbstractLinkedList$Node;" line="425"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNode" desc="(Ljava/lang/Object;)Ltcc/AbstractLinkedList$Node;" line="437"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNodeBefore" desc="(Ltcc/AbstractLinkedList$Node;Ljava/lang/Object;)V" line="452"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNodeAfter" desc="(Ltcc/AbstractLinkedList$Node;Ljava/lang/Object;)V" line="468"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNode" desc="(Ltcc/AbstractLinkedList$Node;Ltcc/AbstractLinkedList$Node;)V" line="480"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeNode" desc="(Ltcc/AbstractLinkedList$Node;)V" line="497"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllNodes" desc="()V" line="508"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNode" desc="(IZ)Ltcc/AbstractLinkedList$Node;" line="527"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSubListIterator" desc="(Ltcc/AbstractLinkedList$LinkedSubList;)Ljava/util/Iterator;" line="565"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSubListListIterator" desc="(Ltcc/AbstractLinkedList$LinkedSubList;I)Ljava/util/ListIterator;" line="576"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doWriteObject" desc="(Ljava/io/ObjectOutputStream;)V" line="590"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doReadObject" desc="(Ljava/io/ObjectInputStream;)V" line="608"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="695"/><counter type="BRANCH" missed="7" covered="75"/><counter type="LINE" missed="8" covered="175"/><counter type="COMPLEXITY" missed="8" covered="81"/><counter type="METHOD" missed="1" covered="47"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractLinkedList.java"><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="2"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="12" mb="0" cb="2"/><line nr="148" mi="0" ci="6" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="9" mb="0" cb="2"/><line nr="163" mi="0" ci="9" mb="0" cb="2"/><line nr="164" mi="0" ci="4" mb="0" cb="2"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="2"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="13" mb="0" cb="2"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="9" mb="0" cb="2"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="12" mb="0" cb="2"/><line nr="248" mi="0" ci="6" mb="0" cb="2"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="5" mb="0" cb="2"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="2"/><line nr="293" mi="0" ci="5" mb="0" cb="2"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="1" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="1" cb="1"/><line nr="318" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="1" cb="1"/><line nr="326" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="1" cb="1"/><line nr="344" mi="4" ci="0" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="1" cb="1"/><line nr="354" mi="4" ci="0" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="2"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="2"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="2"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="6" mb="1" cb="3"/><line nr="376" mi="0" ci="6" mb="0" cb="2"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="1" ci="9" mb="2" cb="2"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="9" mb="0" cb="2"/><line nr="387" mi="0" ci="11" mb="0" cb="2"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="389" mi="0" ci="2" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="437" mi="0" ci="5" mb="0" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="453" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="5" mb="0" cb="0"/><line nr="470" mi="0" ci="1" mb="0" cb="0"/><line nr="480" mi="0" ci="4" mb="0" cb="0"/><line nr="481" mi="0" ci="4" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="0"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="0" ci="6" mb="0" cb="0"/><line nr="487" mi="0" ci="6" mb="0" cb="0"/><line nr="488" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="500" mi="0" ci="6" mb="0" cb="0"/><line nr="501" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="0" ci="1" mb="0" cb="0"/><line nr="508" mi="0" ci="5" mb="0" cb="0"/><line nr="509" mi="0" ci="5" mb="0" cb="0"/><line nr="510" mi="0" ci="3" mb="0" cb="0"/><line nr="511" mi="0" ci="6" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="527" mi="0" ci="2" mb="0" cb="2"/><line nr="528" mi="0" ci="6" mb="0" cb="0"/><line nr="531" mi="0" ci="6" mb="0" cb="4"/><line nr="532" mi="0" ci="6" mb="0" cb="0"/><line nr="535" mi="0" ci="4" mb="0" cb="2"/><line nr="536" mi="0" ci="8" mb="0" cb="0"/><line nr="542" mi="0" ci="6" mb="0" cb="2"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="545" mi="0" ci="8" mb="0" cb="2"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="550" mi="0" ci="3" mb="0" cb="0"/><line nr="551" mi="0" ci="8" mb="0" cb="2"/><line nr="552" mi="0" ci="3" mb="0" cb="0"/><line nr="555" mi="0" ci="2" mb="0" cb="0"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="576" mi="0" ci="6" mb="0" cb="0"/><line nr="590" mi="0" ci="4" mb="0" cb="0"/><line nr="591" mi="0" ci="9" mb="0" cb="2"/><line nr="592" mi="0" ci="3" mb="0" cb="0"/><line nr="593" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="1" mb="0" cb="0"/><line nr="608" mi="0" ci="2" mb="0" cb="0"/><line nr="609" mi="0" ci="3" mb="0" cb="0"/><line nr="610" mi="0" ci="7" mb="0" cb="2"/><line nr="611" mi="0" ci="5" mb="0" cb="0"/><line nr="613" mi="0" ci="1" mb="0" cb="0"/><line nr="639" mi="0" ci="2" mb="0" cb="0"/><line nr="640" mi="0" ci="3" mb="0" cb="0"/><line nr="641" mi="0" ci="3" mb="0" cb="0"/><line nr="642" mi="0" ci="1" mb="0" cb="0"/><line nr="649" mi="0" ci="2" mb="0" cb="0"/><line nr="650" mi="0" ci="3" mb="0" cb="0"/><line nr="651" mi="0" ci="1" mb="0" cb="0"/><line nr="660" mi="2" ci="0" mb="0" cb="0"/><line nr="661" mi="3" ci="0" mb="0" cb="0"/><line nr="662" mi="3" ci="0" mb="0" cb="0"/><line nr="663" mi="3" ci="0" mb="0" cb="0"/><line nr="664" mi="1" ci="0" mb="0" cb="0"/><line nr="673" mi="0" ci="3" mb="0" cb="0"/><line nr="683" mi="0" ci="3" mb="0" cb="0"/><line nr="684" mi="0" ci="1" mb="0" cb="0"/><line nr="693" mi="3" ci="0" mb="0" cb="0"/><line nr="703" mi="3" ci="0" mb="0" cb="0"/><line nr="704" mi="1" ci="0" mb="0" cb="0"/><line nr="713" mi="3" ci="0" mb="0" cb="0"/><line nr="723" mi="3" ci="0" mb="0" cb="0"/><line nr="724" mi="1" ci="0" mb="0" cb="0"/><line nr="774" mi="0" ci="2" mb="0" cb="0"/><line nr="775" mi="0" ci="3" mb="0" cb="0"/><line nr="776" mi="0" ci="4" mb="0" cb="0"/><line nr="777" mi="0" ci="6" mb="0" cb="0"/><line nr="778" mi="0" ci="3" mb="0" cb="0"/><line nr="779" mi="0" ci="1" mb="0" cb="0"/><line nr="789" mi="0" ci="6" mb="1" cb="1"/><line nr="790" mi="4" ci="0" mb="0" cb="0"/><line nr="792" mi="0" ci="1" mb="0" cb="0"/><line nr="802" mi="0" ci="3" mb="0" cb="2"/><line nr="803" mi="0" ci="4" mb="0" cb="0"/><line nr="805" mi="0" ci="3" mb="0" cb="0"/><line nr="810" mi="0" ci="10" mb="0" cb="2"/><line nr="815" mi="0" ci="2" mb="0" cb="0"/><line nr="816" mi="0" ci="3" mb="0" cb="2"/><line nr="817" mi="0" ci="7" mb="0" cb="0"/><line nr="819" mi="0" ci="4" mb="0" cb="0"/><line nr="820" mi="0" ci="4" mb="0" cb="0"/><line nr="821" mi="0" ci="5" mb="0" cb="0"/><line nr="822" mi="0" ci="6" mb="0" cb="0"/><line nr="823" mi="0" ci="2" mb="0" cb="0"/><line nr="828" mi="0" ci="11" mb="0" cb="2"/><line nr="833" mi="0" ci="2" mb="0" cb="0"/><line nr="834" mi="0" ci="3" mb="0" cb="2"/><line nr="835" mi="0" ci="5" mb="0" cb="0"/><line nr="837" mi="0" ci="5" mb="0" cb="0"/><line nr="838" mi="0" ci="4" mb="0" cb="0"/><line nr="839" mi="0" ci="4" mb="0" cb="0"/><line nr="840" mi="0" ci="6" mb="0" cb="0"/><line nr="841" mi="0" ci="2" mb="0" cb="0"/><line nr="846" mi="0" ci="3" mb="0" cb="0"/><line nr="852" mi="0" ci="5" mb="0" cb="0"/><line nr="857" mi="0" ci="2" mb="0" cb="0"/><line nr="858" mi="0" ci="5" mb="0" cb="2"/><line nr="860" mi="0" ci="5" mb="0" cb="0"/><line nr="861" mi="0" ci="6" mb="0" cb="0"/><line nr="864" mi="0" ci="5" mb="0" cb="0"/><line nr="865" mi="0" ci="6" mb="0" cb="0"/><line nr="867" mi="0" ci="3" mb="0" cb="0"/><line nr="868" mi="0" ci="6" mb="0" cb="0"/><line nr="869" mi="0" ci="1" mb="0" cb="0"/><line nr="873" mi="0" ci="2" mb="0" cb="0"/><line nr="874" mi="0" ci="4" mb="0" cb="0"/><line nr="875" mi="0" ci="1" mb="0" cb="0"/><line nr="879" mi="0" ci="2" mb="0" cb="0"/><line nr="880" mi="0" ci="6" mb="0" cb="0"/><line nr="881" mi="0" ci="3" mb="0" cb="0"/><line nr="882" mi="0" ci="6" mb="0" cb="0"/><line nr="883" mi="0" ci="6" mb="0" cb="0"/><line nr="884" mi="0" ci="1" mb="0" cb="0"/><line nr="899" mi="0" ci="8" mb="0" cb="0"/><line nr="900" mi="0" ci="3" mb="0" cb="0"/><line nr="901" mi="0" ci="1" mb="0" cb="0"/><line nr="905" mi="0" ci="10" mb="0" cb="2"/><line nr="910" mi="0" ci="7" mb="0" cb="2"/><line nr="915" mi="0" ci="7" mb="0" cb="0"/><line nr="920" mi="0" ci="3" mb="0" cb="0"/><line nr="921" mi="0" ci="6" mb="0" cb="0"/><line nr="922" mi="0" ci="7" mb="0" cb="0"/><line nr="923" mi="0" ci="1" mb="0" cb="0"/><line nr="927" mi="0" ci="2" mb="0" cb="0"/><line nr="928" mi="0" ci="6" mb="0" cb="0"/><line nr="929" mi="0" ci="7" mb="0" cb="0"/><line nr="930" mi="0" ci="1" mb="0" cb="0"/><line nr="954" mi="0" ci="2" mb="0" cb="0"/><line nr="955" mi="0" ci="2" mb="1" cb="1"/><line nr="956" mi="6" ci="0" mb="0" cb="0"/><line nr="958" mi="0" ci="4" mb="1" cb="1"/><line nr="959" mi="6" ci="0" mb="0" cb="0"/><line nr="961" mi="0" ci="3" mb="1" cb="1"/><line nr="962" mi="7" ci="0" mb="0" cb="0"/><line nr="964" mi="0" ci="3" mb="0" cb="0"/><line nr="965" mi="0" ci="3" mb="0" cb="0"/><line nr="966" mi="0" ci="5" mb="0" cb="0"/><line nr="967" mi="0" ci="4" mb="0" cb="0"/><line nr="968" mi="0" ci="1" mb="0" cb="0"/><line nr="972" mi="0" ci="2" mb="0" cb="0"/><line nr="973" mi="0" ci="3" mb="0" cb="0"/><line nr="978" mi="0" ci="5" mb="0" cb="0"/><line nr="979" mi="0" ci="2" mb="0" cb="0"/><line nr="980" mi="0" ci="8" mb="0" cb="0"/><line nr="985" mi="0" ci="7" mb="0" cb="0"/><line nr="986" mi="0" ci="2" mb="0" cb="0"/><line nr="987" mi="0" ci="8" mb="0" cb="0"/><line nr="988" mi="0" ci="5" mb="0" cb="0"/><line nr="989" mi="0" ci="6" mb="0" cb="0"/><line nr="990" mi="0" ci="6" mb="0" cb="0"/><line nr="991" mi="0" ci="1" mb="0" cb="0"/><line nr="995" mi="0" ci="5" mb="0" cb="0"/><line nr="996" mi="0" ci="2" mb="0" cb="0"/><line nr="997" mi="0" ci="8" mb="0" cb="0"/><line nr="998" mi="0" ci="5" mb="0" cb="0"/><line nr="999" mi="0" ci="6" mb="0" cb="0"/><line nr="1000" mi="0" ci="6" mb="0" cb="0"/><line nr="1001" mi="0" ci="2" mb="0" cb="0"/><line nr="1006" mi="0" ci="6" mb="0" cb="0"/><line nr="1011" mi="0" ci="7" mb="0" cb="0"/><line nr="1012" mi="0" ci="3" mb="0" cb="0"/><line nr="1013" mi="0" ci="2" mb="1" cb="1"/><line nr="1014" mi="2" ci="0" mb="0" cb="0"/><line nr="1017" mi="0" ci="2" mb="0" cb="0"/><line nr="1018" mi="0" ci="9" mb="0" cb="0"/><line nr="1019" mi="0" ci="5" mb="0" cb="0"/><line nr="1020" mi="0" ci="6" mb="0" cb="0"/><line nr="1021" mi="0" ci="6" mb="0" cb="0"/><line nr="1022" mi="0" ci="2" mb="0" cb="0"/><line nr="1027" mi="0" ci="5" mb="0" cb="0"/><line nr="1028" mi="0" ci="2" mb="0" cb="0"/><line nr="1029" mi="0" ci="9" mb="0" cb="0"/><line nr="1034" mi="0" ci="2" mb="0" cb="0"/><line nr="1035" mi="0" ci="3" mb="0" cb="0"/><line nr="1036" mi="0" ci="3" mb="0" cb="2"/><line nr="1037" mi="0" ci="3" mb="0" cb="0"/><line nr="1038" mi="0" ci="3" mb="0" cb="0"/><line nr="1040" mi="0" ci="1" mb="0" cb="0"/><line nr="1044" mi="0" ci="2" mb="0" cb="0"/><line nr="1045" mi="0" ci="5" mb="0" cb="0"/><line nr="1050" mi="0" ci="7" mb="0" cb="0"/><line nr="1051" mi="0" ci="2" mb="0" cb="0"/><line nr="1052" mi="0" ci="6" mb="0" cb="0"/><line nr="1057" mi="14" ci="0" mb="0" cb="0"/><line nr="1061" mi="0" ci="5" mb="0" cb="4"/><line nr="1062" mi="0" ci="8" mb="0" cb="0"/><line nr="1064" mi="0" ci="1" mb="0" cb="0"/><line nr="1067" mi="0" ci="6" mb="1" cb="1"/><line nr="1068" mi="4" ci="0" mb="0" cb="0"/><line nr="1070" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="1223"/><counter type="BRANCH" missed="13" covered="103"/><counter type="LINE" missed="26" covered="305"/><counter type="COMPLEXITY" missed="20" covered="127"/><counter type="METHOD" missed="7" covered="82"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="NodeCachingLinkedList.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="2"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="150"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="4" covered="51"/><counter type="COMPLEXITY" missed="2" covered="18"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="105" covered="1373"/><counter type="BRANCH" missed="13" covered="115"/><counter type="LINE" missed="30" covered="356"/><counter type="COMPLEXITY" missed="22" covered="145"/><counter type="METHOD" missed="9" covered="94"/><counter type="CLASS" missed="0" covered="6"/></package><counter type="INSTRUCTION" missed="105" covered="1373"/><counter type="BRANCH" missed="13" covered="115"/><counter type="LINE" missed="30" covered="356"/><counter type="COMPLEXITY" missed="22" covered="145"/><counter type="METHOD" missed="9" covered="94"/><counter type="CLASS" missed="0" covered="6"/></report>